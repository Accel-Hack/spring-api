/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    `java-library`
    `maven-publish`
    id("io.freefair.lombok") version "8.4"
    id("org.springframework.boot") version "3.0.5"
}
apply(plugin = "io.spring.dependency-management")

springBoot {
    mainClass.set("com.accelhack.spring.api.ApiApplication")
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }

    maven {
        url = uri("https://maven.pkg.github.com/accel-hack/accel-parts")
    }
}

dependencies {
    implementation(libs.com.google.guava.guava)
    implementation(libs.com.accelhack.commons.utils)
    implementation(libs.com.accelhack.commons.model)
    implementation(libs.com.auth0.java.jwt)
    implementation(libs.org.mybatis.dynamic.sql.mybatis.dynamic.sql)
    implementation(libs.org.mybatis.spring.boot.mybatis.spring.boot.starter)
    implementation(libs.org.projectlombok.lombok)
    implementation(libs.org.springframework.security.spring.security.crypto)
    implementation(libs.org.apache.commons.commons.lang3)
    implementation("org.springframework.boot:spring-boot-configuration-processor")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-oauth2-client")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-security")
    runtimeOnly(libs.mysql.mysql.connector.java)
    runtimeOnly("org.springframework.boot:spring-boot-devtools")
    testImplementation(libs.com.github.springtestdbunit.spring.test.dbunit)
    testImplementation(libs.org.junit.jupiter.junit.jupiter)
    testImplementation(libs.org.mockito.mockito.inline)
    testImplementation(libs.org.dbunit.dbunit)
    testImplementation(libs.org.powermock.powermock.reflect)
    testImplementation(libs.org.springframework.security.spring.security.test)
    testImplementation("org.springframework.boot:spring-boot-starter-test")
}

group = "com.accelhack.application.api"
version = "1.0-SNAPSHOT"
description = "ApiApplication"

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}

tasks.withType<Javadoc>() {
    options.encoding = "UTF-8"
}
